# =============================================================================
# Deployment for API Gateway
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: api-gateway
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/component: gateway
    app.kubernetes.io/part-of: api-gateway-system
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway
      app.kubernetes.io/component: gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-gateway
        app.kubernetes.io/component: gateway
        app.kubernetes.io/part-of: api-gateway-system
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: api-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: api-gateway
          image: api-gateway:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # Environment variables from ConfigMap
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: PORT
            - name: JWT_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: JWT_EXPIRATION
            - name: RATE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: RATE_LIMIT
            - name: RATE_BURST_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: RATE_BURST_LIMIT
            - name: RATE_CLEANUP
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: RATE_CLEANUP
            - name: HEALTH_CHECK_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: HEALTH_CHECK_INTERVAL
            - name: HEALTH_CHECK_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: HEALTH_CHECK_TIMEOUT
            - name: READ_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: READ_TIMEOUT
            - name: WRITE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: WRITE_TIMEOUT
            # Logging configuration
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "json"
            - name: LOG_OUTPUT  
              value: "stdout"
            - name: LOG_ENABLE_HOOKS
              value: "false"
            - name: LOG_REQUESTS
              value: "true"
            - name: ENVIRONMENT
              value: "kubernetes"
            # Sensitive environment variables from Secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-gateway-secret
                  key: JWT_SECRET
            # Kubernetes-specific environment variables
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: config-volume
              mountPath: /app/configs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config-volume
          configMap:
            name: api-gateway-config
            items:
              - key: gateway.yaml
                path: gateway.yaml
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      # Anti-affinity to spread pods across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - api-gateway
                topologyKey: kubernetes.io/hostname
